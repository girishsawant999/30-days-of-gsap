"use client";
import { MODELS_IMAGES } from "@/constants/Models";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import { Observer } from "gsap/Observer";
import { Menu } from "lucide-react";
import Image from "next/image";
import { useRef } from "react";

gsap.registerPlugin(Observer);

const TimelineWithCarousel = () => {
  const container = useRef(null);

  useGSAP(() => {
    const items: HTMLElement[] = gsap.utils.toArray(".img-container");
    const itemWidth = items[0].offsetWidth;

    const wrapX = gsap.utils.wrap(
      -itemWidth,
      Math.ceil(items.length / 2) * itemWidth
    );

    const scrollCarousel = (dir: 1 | -1) => {
      items.forEach((item) => {
        gsap.to(item, {
          duration: 0.5,
          x: `+=${dir * itemWidth}`,
          modifiers: {
            x: (x) => wrapX(parseFloat(x)) + "px",
          },
          ease: "power2.out",
        });
      });
    };

    const tl = gsap.timeline({
      onComplete: () => {
        Observer.create({
          target: container.current,
          type: "wheel,touch,pointer",
          onDown: () => {
            scrollCarousel(-1);
          },
          onUp: () => {
            scrollCarousel(1);
          },
          onLeft: () => {
            scrollCarousel(-1);
          },
          onRight: () => {
            scrollCarousel(1);
          },
        });
      },
    });

    tl.fromTo(
      ".img-container",
      {
        opacity: 0,
        x: (idx, curr, total) => {
          const l = total.length;
          const multiplier = idx === l / 2 ? 0 : idx < l / 2 ? -1 : 1;
          const baseDistance = window.innerWidth;
          const extraDistance = Math.abs(idx - l / 2) * baseDistance;
          return multiplier * (baseDistance + extraDistance);
        },
      },
      {
        opacity: 1,
        x: 0,
        duration: (idx, curr, total) => 0.05 * total.length,
        ease: "power2.out",
        stagger: {
          amount: 0.4,
          from: "center",
        },
      },
      "<"
    );

    tl.to(".wrapper", {
      y: 0,
      scale: 1,
    })
      .to(
        ".main-container",
        {
          backgroundColor: "#fff",
        },
        "<"
      )
      .to(
        ".text-svg",
        {
          color: "#000",
        },
        "<"
      );
  });

  return (
    <section
      ref={container}
      className="bg-[#632222] text-foreground overflow-hidden h-screen main-container"
    >
      <div className="px-4 py-5 flex items-center gap-1.5 text-gray-800">
        <Menu />
        Menu
      </div>
      <div className="wrapper flex justify-center translate-y-1/2 scale-[0.35]">
        {[
          ...MODELS_IMAGES,
          ...MODELS_IMAGES,
          ...MODELS_IMAGES,
          ...MODELS_IMAGES,
          ...MODELS_IMAGES,
        ]
          .slice(1)
          .map((model, index) => (
            <div
              className="shrink-0 group relative w-3/6 md:w-2/12 aspect-[2/3] opacity-0 img-container overflow-hidden cursor-pointer"
              key={index}
            >
              <Image
                src={model}
                alt={`Model ${index + 1}`}
                fill
                className="object-cover group-hover:scale-110 transition-transform ease-in"
              />
            </div>
          ))}
      </div>
      <div className="fixed bottom-0 left-0 right-0">
        <svg
          className="w-full h-auto text-svg text-white/20"
          xmlns="http://www.w3.org/2000/svg"
          width="1471"
          height="133"
          viewBox="0 0 1471 133"
          fill="none"
        >
          <path
            d="M75.7774 122.243C87.7497 122.243 91.2908 117.69 85.389 102.345L78.4754 84.3026H29.7434L24.0102 99.1414C17.6025 115.835 23.3357 122.243 36.4883 122.243V125.109H0.740183V122.243C10.0145 122.243 13.8928 114.992 20.1318 98.8042L52.1702 15.673L49.6409 9.0967V8.08497C52.8447 6.23011 54.5309 4.37526 56.3858 1.17142H57.3975L96.1808 102.345C102.083 117.69 104.275 122.243 112.537 122.243V125.109H75.7774V122.243ZM31.0923 80.5929H77.1264L54.0251 20.7317L31.0923 80.5929ZM162.469 128.145C134.815 128.145 118.459 113.474 118.459 80.9301V31.3549C118.459 11.9633 115.255 9.93982 103.451 9.93982V7.07322H143.246V9.93982C131.949 9.93982 128.239 11.9633 128.239 31.3549V80.087C128.239 109.596 140.211 122.749 164.324 122.749C188.943 122.749 201.253 108.753 201.253 79.5811V30.006C201.253 14.9985 196.363 9.93982 184.053 9.93982V7.07322H218.958V9.93982C209.852 9.93982 205.131 15.3358 205.131 29.8373V78.9067C205.131 110.945 192.484 128.145 162.469 128.145ZM226.625 127.301L224.264 89.6985L227.637 89.1927C233.033 110.945 243.993 124.604 265.24 124.604C285.137 124.604 295.255 112.294 295.255 97.9611C295.255 83.2909 284.631 75.5342 264.565 68.452C242.982 60.864 225.107 52.4328 225.107 34.0529C225.107 17.5279 239.778 4.03801 261.53 4.03801C274.008 4.03801 281.09 8.42221 285.306 8.42221C288.51 8.42221 290.027 5.55562 289.859 1.84592L293.063 1.50866L301.157 36.5823L297.784 37.4254C292.388 19.8886 280.753 7.5791 261.53 7.5791C244.162 7.5791 235.056 17.8651 235.056 30.5118C235.056 42.6527 243.319 50.4094 265.408 57.8288C292.894 67.103 305.372 77.8949 305.372 94.42C305.372 113.474 288.847 128.145 264.734 128.145C247.703 128.145 240.621 120.725 235.056 120.725C231.515 120.725 229.66 123.423 229.492 127.133L226.625 127.301ZM312.041 122.243C323.17 122.243 326.205 120.219 326.205 100.828V31.3549C326.205 11.9633 323.17 9.93982 312.041 9.93982V7.07322H356.388C382.019 7.07322 396.858 18.0337 396.858 34.7274C396.858 50.4094 383.705 61.3699 363.302 64.2364L382.356 88.5182C403.603 115.498 408.999 122.243 419.622 122.243V125.109H398.207C391.631 116.004 385.56 108.078 372.745 91.5534L352.004 64.9109H335.985V100.828C335.985 120.219 339.02 122.243 350.149 122.243V125.109H312.041V122.243ZM335.985 61.3699H352.679C370.721 61.3699 386.066 53.1073 386.066 35.4019C386.066 21.7434 376.792 10.6143 356.726 10.6143H354.365C339.357 10.6143 335.985 11.9633 335.985 22.9238V61.3699ZM490.109 122.243C502.081 122.243 505.622 117.69 499.721 102.345L492.807 84.3026H444.075L438.342 99.1414C431.934 115.835 437.667 122.243 450.82 122.243V125.109H415.072V122.243C424.346 122.243 428.224 114.992 434.463 98.8042L466.502 15.673L463.972 9.0967V8.08497C467.176 6.23011 468.863 4.37526 470.717 1.17142H471.729L510.512 102.345C516.414 117.69 518.606 122.243 526.869 122.243V125.109H490.109V122.243ZM445.424 80.5929H491.458L468.357 20.7317L445.424 80.5929ZM567.583 122.243C579.387 122.243 582.591 120.219 582.591 100.828V31.3549C582.591 11.9633 579.387 9.93982 567.583 9.93982V7.07322H611.088C634.527 7.07322 645.656 19.0455 645.656 32.3667C645.656 48.3859 629.637 58.166 619.519 59.3464V59.6836C631.997 59.6836 655.099 66.9344 655.099 91.0475C655.099 107.573 644.307 125.109 610.245 125.109H567.583V122.243ZM592.371 110.945C592.371 120.219 598.947 121.568 612.606 121.568C632.672 121.568 645.318 110.608 645.318 91.8906C645.318 71.4872 630.48 62.3816 604.512 62.3816H592.371V110.945ZM592.371 58.8405H603.669C625.927 58.8405 635.876 47.0369 635.876 33.0412C635.876 21.0689 628.456 10.6143 610.582 10.6143C596.924 10.6143 592.371 12.3005 592.371 21.2376V58.8405ZM731.819 122.243C743.792 122.243 747.333 117.69 741.431 102.345L734.517 84.3026H685.785L680.052 99.1414C673.644 115.835 679.378 122.243 692.53 122.243V125.109H656.782V122.243C666.056 122.243 669.935 114.992 676.174 98.8042L708.212 15.673L705.683 9.0967V8.08497C708.887 6.23011 710.573 4.37526 712.428 1.17142H713.439L752.223 102.345C758.125 117.69 760.317 122.243 768.579 122.243V125.109H731.819V122.243ZM687.134 80.5929H733.168L710.067 20.7317L687.134 80.5929ZM771.538 122.243C783.342 122.243 786.545 120.219 786.545 100.828V31.3549C786.545 11.9633 783.342 9.93982 771.538 9.93982V7.07322H815.043C838.481 7.07322 849.61 19.0455 849.61 32.3667C849.61 48.3859 833.591 58.166 823.474 59.3464V59.6836C835.952 59.6836 859.053 66.9344 859.053 91.0475C859.053 107.573 848.261 125.109 814.2 125.109H771.538V122.243ZM796.326 110.945C796.326 120.219 802.902 121.568 816.56 121.568C836.626 121.568 849.273 110.608 849.273 91.8906C849.273 71.4872 834.434 62.3816 808.466 62.3816H796.326V110.945ZM796.326 58.8405H807.623C829.881 58.8405 839.83 47.0369 839.83 33.0412C839.83 21.0689 832.411 10.6143 814.537 10.6143C800.878 10.6143 796.326 12.3005 796.326 21.2376V58.8405ZM865.776 122.243C876.905 122.243 879.94 120.219 879.94 100.828V31.3549C879.94 11.9633 876.905 9.93982 865.776 9.93982V7.07322H903.885V9.93982C893.261 9.93982 889.72 11.9633 889.72 31.3549V100.828C889.72 120.219 892.755 122.243 903.885 122.243V125.109H865.776V122.243ZM985.987 131.517C987.504 126.121 984.301 125.109 978.567 125.109H910.612V122.243C921.741 122.243 924.777 120.219 924.777 100.828V31.3549C924.777 11.9633 921.741 9.93982 910.612 9.93982V7.07322H975.195C980.928 7.07322 984.132 6.06149 982.614 0.665549L985.312 -0.00894442L993.238 29.6687L990.371 30.5118C983.626 16.0103 979.916 10.6143 956.984 10.6143H951.925C936.074 10.6143 934.557 11.9633 934.557 22.9238V61.3699H946.866C963.729 61.3699 965.246 56.6484 965.246 42.6527H968.619V83.4595H965.246C965.246 68.6206 963.391 64.9109 947.035 64.9109H934.557V109.259C934.557 120.219 936.074 121.568 951.925 121.568H962.042C981.603 121.568 988.01 117.353 994.249 99.4787L997.453 100.322L988.685 132.192L985.987 131.517ZM1001.06 122.243C1012.19 122.243 1015.4 120.219 1015.4 100.828V31.3549C1015.4 11.9633 1012.19 9.93982 1001.06 9.93982V7.07322H1044.23C1091.95 7.07322 1114.88 30.006 1114.88 64.5737C1114.88 100.996 1091.11 125.109 1048.45 125.109H1001.06V122.243ZM1025.18 106.224C1025.18 120.051 1031.58 121.568 1045.07 121.568H1051.99C1084.36 121.568 1103.92 97.7924 1103.92 65.2482C1103.92 32.3667 1083.69 10.6143 1044.9 10.6143C1031.75 10.6143 1025.18 11.9633 1025.18 22.9238V106.224ZM1188.52 122.243C1200.49 122.243 1204.03 117.69 1198.13 102.345L1191.22 84.3026H1142.48L1136.75 99.1414C1130.34 115.835 1136.08 122.243 1149.23 122.243V125.109H1113.48V122.243C1122.75 122.243 1126.63 114.992 1132.87 98.8042L1164.91 15.673L1162.38 9.0967V8.08497C1165.58 6.23011 1167.27 4.37526 1169.13 1.17142H1170.14L1208.92 102.345C1214.82 117.69 1217.01 122.243 1225.28 122.243V125.109H1188.52V122.243ZM1143.83 80.5929H1189.87L1166.77 20.7317L1143.83 80.5929ZM1228.24 122.243C1239.37 122.243 1242.4 120.219 1242.4 100.828V31.3549C1242.4 11.9633 1239.37 9.93982 1228.24 9.93982V7.07322H1266.34V9.93982C1255.72 9.93982 1252.18 11.9633 1252.18 31.3549V100.828C1252.18 120.219 1255.22 122.243 1266.34 122.243V125.109H1228.24V122.243ZM1304.1 122.243C1316.58 122.243 1319.95 120.219 1319.95 100.828V22.7552C1319.95 13.8181 1317.08 10.6143 1308.15 10.6143H1301.23C1285.38 10.6143 1280.32 20.7317 1272.9 38.0999L1270.04 37.2568L1278.81 0.83417L1281.5 1.50866C1279.99 6.9046 1283.36 7.07322 1289.09 7.07322H1360.76C1366.49 7.07322 1369.69 6.9046 1368.18 1.50866L1370.87 0.83417L1379.64 37.2568L1376.78 38.0999C1369.36 20.7317 1364.3 10.6143 1348.62 10.6143H1341.53C1332.6 10.6143 1329.73 13.6495 1329.73 22.7552V100.828C1329.73 120.219 1333.1 122.243 1345.58 122.243V125.109H1304.1V122.243ZM1458.66 131.517C1460.18 126.121 1456.97 125.109 1451.24 125.109H1383.28V122.243C1394.41 122.243 1397.45 120.219 1397.45 100.828V31.3549C1397.45 11.9633 1394.41 9.93982 1383.28 9.93982V7.07322H1447.87C1453.6 7.07322 1456.8 6.06149 1455.29 0.665549L1457.98 -0.00894442L1465.91 29.6687L1463.04 30.5118C1456.3 16.0103 1452.59 10.6143 1429.65 10.6143H1424.6C1408.75 10.6143 1407.23 11.9633 1407.23 22.9238V61.3699H1419.54C1436.4 61.3699 1437.92 56.6484 1437.92 42.6527H1441.29V83.4595H1437.92C1437.92 68.6206 1436.06 64.9109 1419.71 64.9109H1407.23V109.259C1407.23 120.219 1408.75 121.568 1424.6 121.568H1434.71C1454.27 121.568 1460.68 117.353 1466.92 99.4787L1470.12 100.322L1461.36 132.192L1458.66 131.517Z"
            fill="currentColor"
          ></path>
        </svg>
      </div>
    </section>
  );
};

export default TimelineWithCarousel;
